<!-- 
    Axiom UI
    Copyright (C) 2017 Matt McManis
    http://github.com/MattMcManis/Axiom
    http://axiomui.github.io
    axiom.interface@gmail.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.If not, see<http://www.gnu.org/licenses/> . 
 -->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template Default
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


    <!--/////////////////////////////////////
         Main Window Default
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Label
        /////////////////////////////////////-->

   
    <!--/////////////////////////////////////
         ComboBox Default
        /////////////////////////////////////-->
    

    <!--/////////////////////////////////////
         Textbox Default
        /////////////////////////////////////-->



    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template White
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    
    <!--/////////////////////////////////////
         ComboBox White
        /////////////////////////////////////-->  


    <!--/////////////////////////////////////
         TextBox White
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         ComboBox Glyph White
        /////////////////////////////////////-->



    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template Custom
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


    <!--/////////////////////////////////////
         Main Window 
        /////////////////////////////////////-->

    <!-- Main Window Style Custom -->
    <Style x:Key="WindowStyleCustom" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <!--Background-->
        <Setter Property="Background" Value="#FFebe9ed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Configure Window -->
    <Style x:Key="WindowConfigure" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--Background-->
        <Setter Property="Background" Value="#FFebe9ed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Crop Window -->
    <Style x:Key="WindowCrop" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--Background-->
        <Setter Property="Background" Value="#FFebe9ed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Optimize Advanced -->
    <Style x:Key="WindowOptimizeAdvanced" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--Background-->
        <Setter Property="Background" Value="#FFebe9ed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Log Console -->
    <Style x:Key="WindowLogConsole" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--Background-->
        <Setter Property="Background" Value="#FF000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--/////////////////////////////////////
        ComboBox Custom
        /////////////////////////////////////-->

    
    <!--/////////////////////////////////////
        TextBox Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        TextBox Browse Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        ComboBox Glyph Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Custom Crop
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Folder
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Folder Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Button Custom Volume
        /////////////////////////////////////-->

    
    <!--/////////////////////////////////////
         Toggle Button Custom
        /////////////////////////////////////-->

    
    <!--/////////////////////////////////////
         TextBlock Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Toggle Button Small Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Volume Button Glyph
        /////////////////////////////////////-->



</ResourceDictionary>